
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Model/MiniPanel/popup/popupTopHu.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '60851P7puJFtJI47yoz+HGT', 'popupTopHu');
// Script/Model/MiniPanel/popup/popupTopHu.js

"use strict";

var helper = require('Helper');

cc.Class({
	extends: cc.Component,

	properties: {
		content: {
			default: null,
			type: cc.Node
		},
		body: {
			default: null,
			type: cc.Node
		},
		header: {
			default: null,
			type: cc.Node
		},
		panel: {
			default: null,
			type: cc.Node
		},
		x: {
			default: [],
			type: cc.SpriteFrame
		},
		bet: ""
	},
	init: function init(obj) {
		this.RedT = obj;
	},
	onLoad: function onLoad() {
		this.ttOffset = null;
		this.ttOffset2 = null;
		this.toggleRuning = false;
		this.content.children.forEach(function (obj) {
			obj.hu = obj.children[3].getComponent(cc.Label);
			obj.xHu = obj.children[0].getComponent(cc.Sprite);
		});
		this.header = this.header.children.map(function (obj) {
			return obj.children[0].getComponent(cc.Label);
		});

		cc.RedT.setting.topHu = cc.RedT.setting.topHu || {};
		if (void 0 !== cc.RedT.setting.topHu.position) {
			this.node.position = cc.RedT.setting.topHu.position;
		}
		if (void 0 !== cc.RedT.setting.topHu.open) {
			this.body.active = cc.RedT.setting.topHu.open;
		}
		if (void 0 !== cc.RedT.setting.topHu.data) {
			this.onData(cc.RedT.setting.topHu.data);
		}
	},

	onEnable: function onEnable() {
		this.panel.on(cc.Node.EventType.TOUCH_START, this.eventStart, this);
		this.panel.on(cc.Node.EventType.TOUCH_MOVE, this.eventMove, this);
		this.panel.on(cc.Node.EventType.TOUCH_END, this.eventEnd, this);
		this.panel.on(cc.Node.EventType.TOUCH_CANCEL, this.eventEnd, this);
		// this.panel.on(cc.Node.EventType.MOUSE_ENTER,  this.setTop,     this);
	},
	onDisable: function onDisable() {
		this.panel.off(cc.Node.EventType.TOUCH_START, this.eventStart, this);
		this.panel.off(cc.Node.EventType.TOUCH_MOVE, this.eventMove, this);
		this.panel.off(cc.Node.EventType.TOUCH_END, this.eventEnd, this);
		this.panel.off(cc.Node.EventType.TOUCH_CANCEL, this.eventEnd, this);
		// this.panel.off(cc.Node.EventType.MOUSE_ENTER,  this.setTop,     this);
	},
	eventStart: function eventStart(e) {
		this.setTop();
		this.ttOffset = cc.v2(e.touch.getLocationX() - this.node.position.x, e.touch.getLocationY() - this.node.position.y);
		this.ttOffset2 = cc.v2(e.touch.getLocationX() - (e.touch.getLocationX() - this.node.position.x), e.touch.getLocationY() - (e.touch.getLocationY() - this.node.position.y));
	},
	eventMove: function eventMove(e) {
		var x = e.touch.getLocationX() - this.ttOffset.x;
		var y = e.touch.getLocationY() - this.ttOffset.y;
		if (Math.abs(x) > cc.RedT.inGame.node.width / 2 - 50) {
			x = x < 0 ? -cc.RedT.inGame.node.width / 2 + 50 : cc.RedT.inGame.node.width / 2 - 50;
		}
		if (Math.abs(y) > cc.RedT.inGame.node.height / 2 - 50) {
			y = y < 0 ? -cc.RedT.inGame.node.height / 2 + 50 : cc.RedT.inGame.node.height / 2 - 50;
		}
		this.node.position = cc.v2(x, y);
	},
	eventEnd: function eventEnd(e) {
		cc.RedT.setting.topHu.position = this.node.position;
		this.xChanger = this.ttOffset2.x - (e.touch.getLocationX() - this.ttOffset.x);
		this.yChanger = this.ttOffset2.y - (e.touch.getLocationY() - this.ttOffset.y);
		if (this.xChanger < 5 && this.xChanger > -5 && this.yChanger < 5 && this.yChanger > -5) {
			this.toggle();
		}
	},
	toggle: function toggle() {
		cc.RedT.audio.playClick();
		this.body.active = cc.RedT.setting.topHu.open = !this.body.active;
		this.onChangerData();
	},
	onChangerBet: function onChangerBet(e, value) {
		this.bet = value;
		this.header.forEach(function (obj) {
			if (e.target !== obj.node.parent) {
				obj.font = cc.RedT.MiniPanel.TaiXiu.TX_Main.fontTru;
			} else {
				obj.font = cc.RedT.MiniPanel.TaiXiu.TX_Main.fontCong;
			}
		});
		this.onChangerData();
	},
	onData: function onData(data) {
		cc.RedT.setting.topHu.data = data;
		if (this.body.active) {
			this.onChangerData();
		}
		this.onChangerGame();
	},
	onChangerData: function onChangerData() {
		if (void 0 !== cc.RedT.setting.topHu.data) {
			var self = this;
			var dataName = [];
			var result = this.content.children.map(function (obj) {
				var name = obj.name;
				var T = cc.RedT.setting.topHu.data[name].filter(function (temp) {
					return temp.type == this.bet;
				}.bind(this));
				dataName[name] = obj;
				if (!T.length) {
					T[0] = { name: name, bet: 0 };
				} else {
					T[0].name = name;
				}
				return T[0];
			}.bind(this));
			result = result.sort(function (a, b) {
				return b.bet - a.bet;
			});
			result.forEach(function (obj, index) {
				var temp = dataName[obj.name];
				temp.stopAllActions();
				var y = -(75 * (index + 1) - 37.5);
				temp.runAction(cc.moveTo(0.2, cc.v2(0, y)));
				if (helper.getOnlyNumberInString(temp.hu.string) - obj.bet !== 0) {
					helper.numberTo(temp.hu, helper.getOnlyNumberInString(temp.hu.string), obj.bet, 2000, true);
				}
				if (obj.balans > 0 && !!this.x[obj.x - 2]) {
					temp.xHu.node.active = true;
					temp.xHu.spriteFrame = this.x[obj.x - 2];
				} else {
					temp.xHu.node.active = false;
				}
			}.bind(this));
		}
	},
	onChangerGame: function onChangerGame() {
		this.RedT.MiniPoker.onGetHu();
		//this.RedT.BaCay.onGetHu();
		this.RedT.BigBabol.onGetHu();
		this.RedT.CaoThap.onGetHu();
		this.RedT.AngryBirds.onGetHu();
		this.RedT.MegaJackpot.onGetHu();
		///**
		if (void 0 !== cc.RedT.inGame.onGetHu) {
			cc.RedT.inGame.onGetHu();
		}
		//*/
	},
	setTop: function setTop() {
		this.node.parent.insertChild(this.node);
	}
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxhc3NldHNcXFNjcmlwdFxcTW9kZWxcXE1pbmlQYW5lbFxccG9wdXAvLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGFzc2V0c1xcU2NyaXB0XFxNb2RlbFxcTWluaVBhbmVsXFxwb3B1cC9hc3NldHNcXFNjcmlwdFxcTW9kZWxcXE1pbmlQYW5lbFxccG9wdXBcXHBvcHVwVG9wSHUuanMiXSwibmFtZXMiOlsiaGVscGVyIiwicmVxdWlyZSIsImNjIiwiQ2xhc3MiLCJleHRlbmRzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsImNvbnRlbnQiLCJkZWZhdWx0IiwidHlwZSIsIk5vZGUiLCJib2R5IiwiaGVhZGVyIiwicGFuZWwiLCJ4IiwiU3ByaXRlRnJhbWUiLCJiZXQiLCJpbml0Iiwib2JqIiwiUmVkVCIsIm9uTG9hZCIsInR0T2Zmc2V0IiwidHRPZmZzZXQyIiwidG9nZ2xlUnVuaW5nIiwiY2hpbGRyZW4iLCJmb3JFYWNoIiwiaHUiLCJnZXRDb21wb25lbnQiLCJMYWJlbCIsInhIdSIsIlNwcml0ZSIsIm1hcCIsInNldHRpbmciLCJ0b3BIdSIsInBvc2l0aW9uIiwibm9kZSIsIm9wZW4iLCJhY3RpdmUiLCJkYXRhIiwib25EYXRhIiwib25FbmFibGUiLCJvbiIsIkV2ZW50VHlwZSIsIlRPVUNIX1NUQVJUIiwiZXZlbnRTdGFydCIsIlRPVUNIX01PVkUiLCJldmVudE1vdmUiLCJUT1VDSF9FTkQiLCJldmVudEVuZCIsIlRPVUNIX0NBTkNFTCIsIm9uRGlzYWJsZSIsIm9mZiIsImUiLCJzZXRUb3AiLCJ2MiIsInRvdWNoIiwiZ2V0TG9jYXRpb25YIiwiZ2V0TG9jYXRpb25ZIiwieSIsIk1hdGgiLCJhYnMiLCJpbkdhbWUiLCJ3aWR0aCIsImhlaWdodCIsInhDaGFuZ2VyIiwieUNoYW5nZXIiLCJ0b2dnbGUiLCJhdWRpbyIsInBsYXlDbGljayIsIm9uQ2hhbmdlckRhdGEiLCJvbkNoYW5nZXJCZXQiLCJ2YWx1ZSIsInRhcmdldCIsInBhcmVudCIsImZvbnQiLCJNaW5pUGFuZWwiLCJUYWlYaXUiLCJUWF9NYWluIiwiZm9udFRydSIsImZvbnRDb25nIiwib25DaGFuZ2VyR2FtZSIsInNlbGYiLCJkYXRhTmFtZSIsInJlc3VsdCIsIm5hbWUiLCJUIiwiZmlsdGVyIiwidGVtcCIsImJpbmQiLCJsZW5ndGgiLCJzb3J0IiwiYSIsImIiLCJpbmRleCIsInN0b3BBbGxBY3Rpb25zIiwicnVuQWN0aW9uIiwibW92ZVRvIiwiZ2V0T25seU51bWJlckluU3RyaW5nIiwic3RyaW5nIiwibnVtYmVyVG8iLCJiYWxhbnMiLCJzcHJpdGVGcmFtZSIsIk1pbmlQb2tlciIsIm9uR2V0SHUiLCJCaWdCYWJvbCIsIkNhb1RoYXAiLCJBbmdyeUJpcmRzIiwiTWVnYUphY2twb3QiLCJpbnNlcnRDaGlsZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxJQUFJQSxTQUFTQyxRQUFRLFFBQVIsQ0FBYjs7QUFFQUMsR0FBR0MsS0FBSCxDQUFTO0FBQ1JDLFVBQVNGLEdBQUdHLFNBREo7O0FBR1JDLGFBQVk7QUFDWEMsV0FBUztBQUNSQyxZQUFTLElBREQ7QUFFUkMsU0FBTVAsR0FBR1E7QUFGRCxHQURFO0FBS1hDLFFBQU07QUFDTEgsWUFBUyxJQURKO0FBRUxDLFNBQU1QLEdBQUdRO0FBRkosR0FMSztBQVNYRSxVQUFRO0FBQ1BKLFlBQVMsSUFERjtBQUVQQyxTQUFNUCxHQUFHUTtBQUZGLEdBVEc7QUFhWEcsU0FBTztBQUNOTCxZQUFTLElBREg7QUFFTkMsU0FBTVAsR0FBR1E7QUFGSCxHQWJJO0FBaUJYSSxLQUFHO0FBQ0ZOLFlBQVMsRUFEUDtBQUVGQyxTQUFNUCxHQUFHYTtBQUZQLEdBakJRO0FBcUJYQyxPQUFLO0FBckJNLEVBSEo7QUEwQlJDLE9BQU0sY0FBU0MsR0FBVCxFQUFhO0FBQ2xCLE9BQUtDLElBQUwsR0FBWUQsR0FBWjtBQUNBLEVBNUJPO0FBNkJSRSxPQTdCUSxvQkE2QkU7QUFDVCxPQUFLQyxR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R0FBTCxDQUFTTSxJQUFULENBQWNFLE1BQWQsR0FBdUIsS0FBdkI7QUFDQTtBQUNELElBZGMsQ0FjYm1ELElBZGEsQ0FjUixJQWRRLENBQWY7QUFlQTtBQUNELEVBekpPO0FBMEpSUixnQkFBZSx5QkFBVTtBQUN4QixPQUFLN0QsSUFBTCxDQUFVbUYsU0FBVixDQUFvQkMsT0FBcEI7QUFDTTtBQUNBLE9BQUtwRixJQUFMLENBQVVxRixRQUFWLENBQW1CRCxPQUFuQjtBQUNBLE9BQUtwRixJQUFMLENBQVVzRixPQUFWLENBQWtCRixPQUFsQjtBQUNBLE9BQUtwRixJQUFMLENBQVV1RixVQUFWLENBQXFCSCxPQUFyQjtBQUNBLE9BQUtwRixJQUFMLENBQVV3RixXQUFWLENBQXNCSixPQUF0QjtBQUNBO0FBQ0EsTUFBSSxLQUFLLENBQUwsS0FBV3JHLEdBQUdpQixJQUFILENBQVEwQyxNQUFSLENBQWUwQyxPQUE5QixFQUF1QztBQUN0Q3JHLE1BQUdpQixJQUFILENBQVEwQyxNQUFSLENBQWUwQyxPQUFmO0FBQ0E7QUFDRDtBQUNOLEVBdEtPO0FBdUtSbEQsU0FBUSxrQkFBVTtBQUNqQixPQUFLbEIsSUFBTCxDQUFVc0MsTUFBVixDQUFpQm1DLFdBQWpCLENBQTZCLEtBQUt6RSxJQUFsQztBQUNBO0FBektPLENBQVQiLCJmaWxlIjoicG9wdXBUb3BIdS5qcyIsInNvdXJjZVJvb3QiOiIuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcYXNzZXRzXFxTY3JpcHRcXE1vZGVsXFxNaW5pUGFuZWxcXHBvcHVwIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbnZhciBoZWxwZXIgPSByZXF1aXJlKCdIZWxwZXInKTtcclxuXHJcbmNjLkNsYXNzKHtcclxuXHRleHRlbmRzOiBjYy5Db21wb25lbnQsXHJcblxyXG5cdHByb3BlcnRpZXM6IHtcclxuXHRcdGNvbnRlbnQ6IHtcclxuXHRcdFx0ZGVmYXVsdDogbnVsbCxcclxuXHRcdFx0dHlwZTogY2MuTm9kZVxyXG5cdFx0fSxcclxuXHRcdGJvZHk6IHtcclxuXHRcdFx0ZGVmYXVsdDogbnVsbCxcclxuXHRcdFx0dHlwZTogY2MuTm9kZVxyXG5cdFx0fSxcclxuXHRcdGhlYWRlcjoge1xyXG5cdFx0XHRkZWZhdWx0OiBudWxsLFxyXG5cdFx0XHR0eXBlOiBjYy5Ob2RlXHJcblx0XHR9LFxyXG5cdFx0cGFuZWw6IHtcclxuXHRcdFx0ZGVmYXVsdDogbnVsbCxcclxuXHRcdFx0dHlwZTogY2MuTm9kZVxyXG5cdFx0fSxcclxuXHRcdHg6IHtcclxuXHRcdFx0ZGVmYXVsdDogW10sXHJcblx0XHRcdHR5cGU6IGNjLlNwcml0ZUZyYW1lLFxyXG5cdFx0fSxcclxuXHRcdGJldDogXCJcIixcclxuXHR9LFxyXG5cdGluaXQ6IGZ1bmN0aW9uKG9iail7XHJcblx0XHR0aGlzLlJlZFQgPSBvYmo7XHJcblx0fSxcclxuXHRvbkxvYWQgKCkge1xyXG5cdFx0dGhpcy50dE9mZnNldCAgICAgPSBudWxsO1xyXG5cdFx0dGhpcy50dE9mZnNldDIgICAgPSBudWxsO1xyXG5cdFx0dGhpcy50b2dnbGVSdW5pbmcgPSBmYWxzZTtcclxuXHRcdHRoaXMuY29udGVudC5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uKG9iail7XHJcblx0XHRcdG9iai5odSAgPSBvYmouY2hpbGRyZW5bM10uZ2V0Q29tcG9uZW50KGNjLkxhYmVsKTtcclxuXHRcdFx0b2JqLnhIdSA9IG9iai5jaGlsZHJlblswXS5nZXRDb21wb25lbnQoY2MuU3ByaXRlKTtcclxuXHRcdH0pO1xyXG5cdFx0dGhpcy5oZWFkZXIgPSB0aGlzLmhlYWRlci5jaGlsZHJlbi5tYXAoZnVuY3Rpb24ob2JqKXtcclxuXHRcdFx0cmV0dXJuIG9iai5jaGlsZHJlblswXS5nZXRDb21wb25lbnQoY2MuTGFiZWwpO1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0Y2MuUmVkVC5zZXR0aW5nLnRvcEh1ID0gY2MuUmVkVC5zZXR0aW5nLnRvcEh1IHx8IHt9O1xyXG5cdFx0aWYgKHZvaWQgMCAhPT0gY2MuUmVkVC5zZXR0aW5nLnRvcEh1LnBvc2l0aW9uKSB7XHJcblx0XHRcdHRoaXMubm9kZS5wb3NpdGlvbiA9IGNjLlJlZFQuc2V0dGluZy50b3BIdS5wb3NpdGlvbjtcclxuXHRcdH1cclxuXHRcdGlmICh2b2lkIDAgIT09IGNjLlJlZFQuc2V0dGluZy50b3BIdS5vcGVuKSB7XHJcblx0XHRcdHRoaXMuYm9keS5hY3RpdmUgPSBjYy5SZWRULnNldHRpbmcudG9wSHUub3BlbjtcclxuXHRcdH1cclxuXHRcdGlmICh2b2lkIDAgIT09IGNjLlJlZFQuc2V0dGluZy50b3BIdS5kYXRhKSB7XHJcblx0XHRcdHRoaXMub25EYXRhKGNjLlJlZFQuc2V0dGluZy50b3BIdS5kYXRhKTtcclxuXHRcdH1cclxuXHR9LFxyXG5cdG9uRW5hYmxlOiBmdW5jdGlvbiAoKSB7XHJcblx0XHR0aGlzLnBhbmVsLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX1NUQVJULCAgdGhpcy5ldmVudFN0YXJ0LCB0aGlzKTtcclxuXHRcdHRoaXMucGFuZWwub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfTU9WRSwgICB0aGlzLmV2ZW50TW92ZSwgIHRoaXMpO1xyXG5cdFx0dGhpcy5wYW5lbC5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9FTkQsICAgIHRoaXMuZXZlbnRFbmQsICAgdGhpcyk7XHJcblx0XHR0aGlzLnBhbmVsLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX0NBTkNFTCwgdGhpcy5ldmVudEVuZCwgICB0aGlzKTtcclxuXHRcdC8vIHRoaXMucGFuZWwub24oY2MuTm9kZS5FdmVudFR5cGUuTU9VU0VfRU5URVIsICB0aGlzLnNldFRvcCwgICAgIHRoaXMpO1xyXG5cdH0sXHJcblx0b25EaXNhYmxlOiBmdW5jdGlvbiAoKSB7XHJcblx0XHR0aGlzLnBhbmVsLm9mZihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9TVEFSVCwgIHRoaXMuZXZlbnRTdGFydCwgdGhpcyk7XHJcblx0XHR0aGlzLnBhbmVsLm9mZihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9NT1ZFLCAgIHRoaXMuZXZlbnRNb3ZlLCAgdGhpcyk7XHJcblx0XHR0aGlzLnBhbmVsLm9mZihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9FTkQsICAgIHRoaXMuZXZlbnRFbmQsICAgdGhpcyk7XHJcblx0XHR0aGlzLnBhbmVsLm9mZihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9DQU5DRUwsIHRoaXMuZXZlbnRFbmQsICAgdGhpcyk7XHJcblx0XHQvLyB0aGlzLnBhbmVsLm9mZihjYy5Ob2RlLkV2ZW50VHlwZS5NT1VTRV9FTlRFUiwgIHRoaXMuc2V0VG9wLCAgICAgdGhpcyk7XHJcblx0fSxcclxuXHRldmVudFN0YXJ0OiBmdW5jdGlvbihlKXtcclxuXHRcdHRoaXMuc2V0VG9wKCk7XHJcblx0XHR0aGlzLnR0T2Zmc2V0ICA9IGNjLnYyKGUudG91Y2guZ2V0TG9jYXRpb25YKCkgLSB0aGlzLm5vZGUucG9zaXRpb24ueCwgZS50b3VjaC5nZXRMb2NhdGlvblkoKSAtIHRoaXMubm9kZS5wb3NpdGlvbi55KVxyXG5cdFx0dGhpcy50dE9mZnNldDIgPSBjYy52MihlLnRvdWNoLmdldExvY2F0aW9uWCgpIC0gKGUudG91Y2guZ2V0TG9jYXRpb25YKCkgLSB0aGlzLm5vZGUucG9zaXRpb24ueCksIGUudG91Y2guZ2V0TG9jYXRpb25ZKCkgLSAoZS50b3VjaC5nZXRMb2NhdGlvblkoKSAtIHRoaXMubm9kZS5wb3NpdGlvbi55KSlcclxuXHR9LFxyXG5cdGV2ZW50TW92ZTogZnVuY3Rpb24oZSl7XHJcblx0XHRsZXQgeCA9IGUudG91Y2guZ2V0TG9jYXRpb25YKCktdGhpcy50dE9mZnNldC54O1xyXG5cdFx0bGV0IHkgPSBlLnRvdWNoLmdldExvY2F0aW9uWSgpLXRoaXMudHRPZmZzZXQueTtcclxuXHRcdGlmIChNYXRoLmFicyh4KSA+IGNjLlJlZFQuaW5HYW1lLm5vZGUud2lkdGgvMi01MCkge1xyXG5cdFx0XHR4ID0geCA8IDAgPyAoLWNjLlJlZFQuaW5HYW1lLm5vZGUud2lkdGgvMikrNTAgOiAoY2MuUmVkVC5pbkdhbWUubm9kZS53aWR0aC8yKS01MDtcclxuXHRcdH1cclxuXHRcdGlmIChNYXRoLmFicyh5KSA+IGNjLlJlZFQuaW5HYW1lLm5vZGUuaGVpZ2h0LzItNTApIHtcclxuXHRcdFx0eSA9IHkgPCAwID8gKC1jYy5SZWRULmluR2FtZS5ub2RlLmhlaWdodC8yKSs1MCA6IChjYy5SZWRULmluR2FtZS5ub2RlLmhlaWdodC8yKS01MDtcclxuXHRcdH1cclxuXHRcdHRoaXMubm9kZS5wb3NpdGlvbiA9IGNjLnYyKHgsIHkpO1xyXG5cdH0sXHJcblx0ZXZlbnRFbmQ6IGZ1bmN0aW9uKGUpe1xyXG5cdFx0Y2MuUmVkVC5zZXR0aW5nLnRvcEh1LnBvc2l0aW9uID0gdGhpcy5ub2RlLnBvc2l0aW9uO1xyXG5cdFx0dGhpcy54Q2hhbmdlciA9IHRoaXMudHRPZmZzZXQyLnggLSAoZS50b3VjaC5nZXRMb2NhdGlvblgoKSAtIHRoaXMudHRPZmZzZXQueClcclxuXHRcdHRoaXMueUNoYW5nZXIgPSB0aGlzLnR0T2Zmc2V0Mi55IC0gKGUudG91Y2guZ2V0TG9jYXRpb25ZKCkgLSB0aGlzLnR0T2Zmc2V0LnkpXHJcblx0XHRpZiAodGhpcy54Q2hhbmdlciA8IDUgJiZcclxuXHRcdFx0dGhpcy54Q2hhbmdlciA+IC01ICYmXHJcblx0XHRcdHRoaXMueUNoYW5nZXIgPCA1ICYmXHJcblx0XHRcdHRoaXMueUNoYW5nZXIgPiAtNSlcclxuXHRcdHtcclxuXHRcdFx0dGhpcy50b2dnbGUoKTtcclxuXHRcdH1cclxuXHR9LFxyXG5cdHRvZ2dsZTogZnVuY3Rpb24oKXtcclxuXHRcdGNjLlJlZFQuYXVkaW8ucGxheUNsaWNrKCk7XHJcblx0XHR0aGlzLmJvZHkuYWN0aXZlID0gY2MuUmVkVC5zZXR0aW5nLnRvcEh1Lm9wZW4gPSAhdGhpcy5ib2R5LmFjdGl2ZTtcclxuXHRcdHRoaXMub25DaGFuZ2VyRGF0YSgpO1xyXG5cdH0sXHJcblx0b25DaGFuZ2VyQmV0OiBmdW5jdGlvbihlLCB2YWx1ZSl7XHJcblx0XHR0aGlzLmJldCA9IHZhbHVlO1xyXG5cdFx0dGhpcy5oZWFkZXIuZm9yRWFjaChmdW5jdGlvbihvYmope1xyXG5cdFx0XHRpZiAoZS50YXJnZXQgIT09IG9iai5ub2RlLnBhcmVudCkge1xyXG5cdFx0XHRcdG9iai5mb250ID0gY2MuUmVkVC5NaW5pUGFuZWwuVGFpWGl1LlRYX01haW4uZm9udFRydTtcclxuXHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0b2JqLmZvbnQgPSBjYy5SZWRULk1pbmlQYW5lbC5UYWlYaXUuVFhfTWFpbi5mb250Q29uZztcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0XHR0aGlzLm9uQ2hhbmdlckRhdGEoKTtcclxuXHR9LFxyXG5cdG9uRGF0YTogZnVuY3Rpb24oZGF0YSl7XHJcblx0XHRjYy5SZWRULnNldHRpbmcudG9wSHUuZGF0YSA9IGRhdGE7XHJcblx0XHRpZiAodGhpcy5ib2R5LmFjdGl2ZSkge1xyXG5cdFx0XHR0aGlzLm9uQ2hhbmdlckRhdGEoKTtcclxuXHRcdH1cclxuXHRcdHRoaXMub25DaGFuZ2VyR2FtZSgpO1xyXG5cdH0sXHJcblx0b25DaGFuZ2VyRGF0YTogZnVuY3Rpb24oKXtcclxuXHRcdGlmICh2b2lkIDAgIT09IGNjLlJlZFQuc2V0dGluZy50b3BIdS5kYXRhKSB7XHJcblx0XHRcdGxldCBzZWxmID0gdGhpcztcclxuXHRcdFx0bGV0IGRhdGFOYW1lID0gW107XHJcblx0XHRcdGxldCByZXN1bHQgPSB0aGlzLmNvbnRlbnQuY2hpbGRyZW4ubWFwKGZ1bmN0aW9uKG9iail7XHJcblx0XHRcdFx0bGV0IG5hbWUgPSBvYmoubmFtZTtcclxuXHRcdFx0XHRsZXQgVCA9IGNjLlJlZFQuc2V0dGluZy50b3BIdS5kYXRhW25hbWVdLmZpbHRlcihmdW5jdGlvbih0ZW1wKXtcclxuXHRcdFx0XHRcdHJldHVybiB0ZW1wLnR5cGUgPT0gdGhpcy5iZXQ7XHJcblx0XHRcdFx0fS5iaW5kKHRoaXMpKTtcclxuXHRcdFx0XHRkYXRhTmFtZVtuYW1lXSA9IG9iajtcclxuXHRcdFx0XHRpZiAoIVQubGVuZ3RoKSB7XHJcblx0XHRcdFx0XHRUWzBdID0ge25hbWU6IG5hbWUsIGJldDogMH07XHJcblx0XHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0XHRUWzBdLm5hbWUgPSBuYW1lO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRyZXR1cm4gVFswXTtcclxuXHRcdFx0fS5iaW5kKHRoaXMpKTtcclxuXHRcdFx0cmVzdWx0ID0gcmVzdWx0LnNvcnQoZnVuY3Rpb24oYSwgYil7XHJcblx0XHRcdFx0cmV0dXJuIGIuYmV0IC0gYS5iZXQ7XHJcblx0XHRcdH0pO1xyXG5cdFx0XHRyZXN1bHQuZm9yRWFjaChmdW5jdGlvbihvYmosIGluZGV4KXtcclxuXHRcdFx0XHRsZXQgdGVtcCA9IGRhdGFOYW1lW29iai5uYW1lXTtcclxuXHRcdFx0XHRcdHRlbXAuc3RvcEFsbEFjdGlvbnMoKTtcclxuXHRcdFx0XHRsZXQgeSA9IC0oNzUqKGluZGV4KzEpLTM3LjUpO1xyXG5cdFx0XHRcdFx0dGVtcC5ydW5BY3Rpb24oY2MubW92ZVRvKDAuMiwgY2MudjIoMCwgeSkpKTtcclxuXHRcdFx0XHRpZiAoaGVscGVyLmdldE9ubHlOdW1iZXJJblN0cmluZyh0ZW1wLmh1LnN0cmluZykgLSBvYmouYmV0ICE9PSAwKSB7XHJcblx0XHRcdFx0XHRoZWxwZXIubnVtYmVyVG8odGVtcC5odSwgaGVscGVyLmdldE9ubHlOdW1iZXJJblN0cmluZyh0ZW1wLmh1LnN0cmluZyksIG9iai5iZXQsIDIwMDAsIHRydWUpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRpZiAob2JqLmJhbGFucyA+IDAgJiYgISF0aGlzLnhbb2JqLngtMl0pIHtcclxuXHRcdFx0XHRcdHRlbXAueEh1Lm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuXHRcdFx0XHRcdHRlbXAueEh1LnNwcml0ZUZyYW1lID0gdGhpcy54W29iai54LTJdO1xyXG5cdFx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdFx0dGVtcC54SHUubm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0uYmluZCh0aGlzKSk7XHJcblx0XHR9XHJcblx0fSxcclxuXHRvbkNoYW5nZXJHYW1lOiBmdW5jdGlvbigpe1xyXG5cdFx0dGhpcy5SZWRULk1pbmlQb2tlci5vbkdldEh1KCk7XHJcbiAgICAgICAgLy90aGlzLlJlZFQuQmFDYXkub25HZXRIdSgpO1xyXG4gICAgICAgIHRoaXMuUmVkVC5CaWdCYWJvbC5vbkdldEh1KCk7XHJcbiAgICAgICAgdGhpcy5SZWRULkNhb1RoYXAub25HZXRIdSgpO1xyXG4gICAgICAgIHRoaXMuUmVkVC5BbmdyeUJpcmRzLm9uR2V0SHUoKTtcclxuICAgICAgICB0aGlzLlJlZFQuTWVnYUphY2twb3Qub25HZXRIdSgpO1xyXG4gICAgICAgIC8vLyoqXHJcbiAgICAgICAgaWYgKHZvaWQgMCAhPT0gY2MuUmVkVC5pbkdhbWUub25HZXRIdSkge1xyXG4gICAgICAgIFx0Y2MuUmVkVC5pbkdhbWUub25HZXRIdSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyovXHJcblx0fSxcclxuXHRzZXRUb3A6IGZ1bmN0aW9uKCl7XHJcblx0XHR0aGlzLm5vZGUucGFyZW50Lmluc2VydENoaWxkKHRoaXMubm9kZSk7XHJcblx0fSxcclxufSk7XHJcbiJdfQ==