
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Model/MiniPanel/popup/popupMinigame.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'acd26OFlQpFU6xTJ63KhBKq', 'popupMinigame');
// Script/Model/MiniPanel/popup/popupMinigame.js

"use strict";

cc.Class({
	extends: cc.Component,

	properties: {
		list: {
			default: null,
			type: cc.Node
		},
		time: {
			default: null,
			type: cc.Label
		},
		nodeTime: {
			default: null,
			type: cc.Node
		},
		panel: {
			default: null,
			type: cc.Node
		}
	},
	onLoad: function onLoad() {
		cc.RedT.setting.popupMini = cc.RedT.setting.popupMini || {};
		this.ttOffset = null;
		this.ttOffset2 = null;
		this.toggleRuning = false;
		if (void 0 !== cc.RedT.setting.popupMini.position) {
			this.node.position = cc.RedT.setting.popupMini.position;
		}
		if (void 0 !== cc.RedT.setting.popupMini.open) {
			if (cc.RedT.setting.popupMini.open) {
				this.list.active = true;
				this.nodeTime.position = cc.v2(-155.7, 43);
				this.list.scale = 1;
			} else {
				this.nodeTime.position = cc.v2(25, 43);
				this.list.scale = 0.2;
				this.list.active = false;
			}
		}
	},

	onEnable: function onEnable() {
		this.panel.on(cc.Node.EventType.TOUCH_START, this.eventStart, this);
		this.panel.on(cc.Node.EventType.TOUCH_MOVE, this.eventMove, this);
		this.panel.on(cc.Node.EventType.TOUCH_END, this.eventEnd, this);
		this.panel.on(cc.Node.EventType.TOUCH_CANCEL, this.eventEnd, this);
		// this.panel.on(cc.Node.EventType.MOUSE_ENTER,  this.setTop,     this);
	},
	onDisable: function onDisable() {
		this.panel.off(cc.Node.EventType.TOUCH_START, this.eventStart, this);
		this.panel.off(cc.Node.EventType.TOUCH_MOVE, this.eventMove, this);
		this.panel.off(cc.Node.EventType.TOUCH_END, this.eventEnd, this);
		this.panel.off(cc.Node.EventType.TOUCH_CANCEL, this.eventEnd, this);
		// this.panel.off(cc.Node.EventType.MOUSE_ENTER,  this.setTop,     this);
	},
	eventStart: function eventStart(e) {
		this.setTop();
		this.ttOffset = cc.v2(e.touch.getLocationX() - this.node.position.x, e.touch.getLocationY() - this.node.position.y);
		this.ttOffset2 = cc.v2(e.touch.getLocationX() - (e.touch.getLocationX() - this.node.position.x), e.touch.getLocationY() - (e.touch.getLocationY() - this.node.position.y));
	},
	eventMove: function eventMove(e) {
		var x = e.touch.getLocationX() - this.ttOffset.x;
		var y = e.touch.getLocationY() - this.ttOffset.y;
		if (Math.abs(x) > cc.RedT.inGame.node.width / 2 - 50) {
			x = x < 0 ? -cc.RedT.inGame.node.width / 2 + 50 : cc.RedT.inGame.node.width / 2 - 50;
		}
		if (Math.abs(y) > cc.RedT.inGame.node.height / 2 - 50) {
			y = y < 0 ? -cc.RedT.inGame.node.height / 2 + 50 : cc.RedT.inGame.node.height / 2 - 50;
		}
		this.node.position = cc.v2(x, y);
	},
	eventEnd: function eventEnd(e) {
		cc.RedT.setting.popupMini.position = this.node.position;
		this.xChanger = this.ttOffset2.x - (e.touch.getLocationX() - this.ttOffset.x);
		this.yChanger = this.ttOffset2.y - (e.touch.getLocationY() - this.ttOffset.y);
		if (this.xChanger < 5 && this.xChanger > -5 && this.yChanger < 5 && this.yChanger > -5) {
			this.toggle();
		}
	},
	toggle: function toggle() {
		cc.RedT.audio.playClick();
		if (!this.toggleRuning) {
			this.toggleRuning = true;
			this.list.stopAllActions();
			if (this.list.active) {
				cc.RedT.setting.popupMini.open = false;
				if (this.nodeTime.active) {
					this.nodeTime.runAction(cc.moveTo(0.3, cc.v2(25, 43)));
				} else {
					this.nodeTime.position = cc.v2(25, 43);
				}
				this.list.runAction(cc.sequence(cc.spawn(cc.scaleTo(0.3, 0.2).easing(cc.easeBackIn(3.0)), cc.rotateTo(0.3, -720)), cc.callFunc(function () {
					this.toggleRuning = this.list.active = false;
				}, this)));
			} else {
				this.list.active = cc.RedT.setting.popupMini.open = true;
				if (this.nodeTime.active) {
					this.nodeTime.runAction(cc.moveTo(0.3, cc.v2(-155.7, 43)));
				} else {
					this.nodeTime.position = cc.v2(-155.7, 43);
				}
				this.list.runAction(cc.sequence(cc.spawn(cc.scaleTo(0.3, 1).easing(cc.easeBackOut(3.0)), cc.rotateTo(0.3, 720)), cc.callFunc(function () {
					this.toggleRuning = false;
				}, this)));
			}
		}
	},
	setTop: function setTop() {
		this.node.parent.insertChild(this.node);
	}
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,