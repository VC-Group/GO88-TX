
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Model/Dialog/DEvent/EventTaiXiu.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e29efzOFZlKPa4AV0cVt6FW', 'EventTaiXiu');
// Script/Model/Dialog/DEvent/EventTaiXiu.js

'use strict';

var helper = require('Helper');

cc.Class({
	extends: cc.Component,

	properties: {
		menu: cc.Node,
		content: cc.Node,

		HQmenu: cc.Node,
		HQcontent: cc.Node,
		HQcontentDay: cc.Node,

		item: cc.Prefab,
		itemDay: cc.Prefab,
		contentHQLeft: cc.Node,
		contentHQRight: cc.Node,

		LabelDate: cc.Label,
		nodeDateMore: cc.Node,
		dataOld: false
	},
	onLoad: function onLoad() {
		this.dateTop = new Date();
		this.dateTop.setDate(this.dateTop.getDate() - 1);
		var stringTime = helper.numberPad(this.dateTop.getDate(), 2) + '/' + helper.numberPad(this.dateTop.getMonth() + 1, 2) + '/' + this.dateTop.getFullYear();
		this.LabelDate.string = stringTime;

		for (var i = 0; i < 11; i++) {
			var dateH = new Date();
			dateH.setDate(dateH.getDate() - 1 - i);
			var item = cc.instantiate(this.itemDay);
			item = item.getComponent('EventTaiXiu_itemDay');
			item.RedT = this;
			item.bg.active = i % 2;
			item.day.string = helper.numberPad(dateH.getDate(), 2) + '/' + helper.numberPad(dateH.getMonth() + 1, 2) + '/' + dateH.getFullYear();
			this.HQcontentDay.addChild(item.node);
		}
	},
	selectEvent: function selectEvent(event) {
		this.nodeDateMore.active = false;
		if (event.target.name == "top") {
			this.onGetTop();
		} else if (event.target.name == "homqua") {
			this.onGetHomQua();
		}
		this.menu.children.forEach(function (menu) {
			if (menu.name === event.target.name) {
				menu.children[0].active = false;
				menu.children[1].active = true;
				menu.children[2].color = cc.color().fromHEX('FAF578');
				menu.pauseSystemEvents();
			} else {
				menu.children[0].active = true;
				menu.children[1].active = false;
				menu.children[2].color = cc.Color.BLACK;
				menu.resumeSystemEvents();
			}
		});
		this.content.children.forEach(function (content) {
			if (content.name === event.target.name) {
				content.active = true;
			} else {
				content.active = false;
			}
		});
	},
	selectHeadHQ: function selectHeadHQ(event) {
		this.HQmenu.children.forEach(function (menu) {
			if (menu.name === event.target.name) {
				menu.children[0].active = false;
				menu.children[1].active = true;
			} else {
				menu.children[0].active = true;
				menu.children[1].active = false;
			}
		});
		this.HQcontent.children.forEach(function (content) {
			if (content.name === event.target.name) {
				content.active = true;
			} else {
				content.active = false;
			}
		});
	},
	onGetTop: function onGetTop() {
		cc.RedT.send({ event: { taixiu: { getTop: true } } });
	},
	onGetHomQua: function onGetHomQua() {
		!this.dataOld && cc.RedT.send({ event: { taixiu: { getTopHQ: this.LabelDate.string } } });
	},
	dateToggle: function dateToggle() {
		this.nodeDateMore.active = !this.nodeDateMore.active;
	},
	dateView: function dateView(obj) {
		if (obj.string != this.LabelDate.string) {
			this.dataOld = false;
			this.LabelDate.string = obj.string;
			this.onGetHomQua();
		}
		this.nodeDateMore.active = false;
	},
	onData: function onData(data) {
		if (!!data.topHQ) {
			this.dataOld = true;
			this.topHQ(data.topHQ);
		}
	},
	topHQ: function topHQ(data) {
		this.contentHQLeft.destroyAllChildren();
		this.contentHQRight.destroyAllChildren();

		data.win.reverse();
		data.lost.reverse();

		data.win.forEach(function (user, index) {
			var item = cc.instantiate(this.item);
			item = item.getComponent('EventTaiXiu_item');
			item.bg.active = index % 2;
			item.top.string = user.top;
			item.users.string = user.name;
			item.day.string = user.line;
			item.date.string = this.LabelDate.string;
			item.gift.string = helper.numberWithCommas(user.reward);
			item.node.children[0].active = !(index & 1);
			this.contentHQLeft.addChild(item.node);
		}.bind(this));

		data.lost.forEach(function (user, index) {
			var item = cc.instantiate(this.item);
			item = item.getComponent('EventTaiXiu_item');

			item.bg.active = index % 2;
			item.top.string = user.top;
			item.users.string = user.name;
			item.day.string = user.line;
			item.date.string = this.LabelDate.string;
			item.gift.string = helper.numberWithCommas(user.reward);
			item.node.children[0].active = !(index & 1);
			this.contentHQRight.addChild(item.node);
		}.bind(this));
	}
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxhc3NldHNcXFNjcmlwdFxcTW9kZWxcXERpYWxvZ1xcREV2ZW50Ly4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxhc3NldHNcXFNjcmlwdFxcTW9kZWxcXERpYWxvZ1xcREV2ZW50L2Fzc2V0c1xcU2NyaXB0XFxNb2RlbFxcRGlhbG9nXFxERXZlbnRcXEV2ZW50VGFpWGl1LmpzIl0sIm5hbWVzIjpbImhlbHBlciIsInJlcXVpcmUiLCJjYyIsIkNsYXNzIiwiZXh0ZW5kcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJtZW51IiwiTm9kZSIsImNvbnRlbnQiLCJIUW1lbnUiLCJIUWNvbnRlbnQiLCJIUWNvbnRlbnREYXkiLCJpdGVtIiwiUHJlZmFiIiwiaXRlbURheSIsImNvbnRlbnRIUUxlZnQiLCJjb250ZW50SFFSaWdodCIsIkxhYmVsRGF0ZSIsIkxhYmVsIiwibm9kZURhdGVNb3JlIiwiZGF0YU9sZCIsIm9uTG9hZCIsImRhdGVUb3AiLCJEYXRlIiwic2V0RGF0ZSIsImdldERhdGUiLCJzdHJpbmdUaW1lIiwibnVtYmVyUGFkIiwiZ2V0TW9udGgiLCJnZXRGdWxsWWVhciIsInN0cmluZyIsImkiLCJkYXRlSCIsImluc3RhbnRpYXRlIiwiZ2V0Q29tcG9uZW50IiwiUmVkVCIsImJnIiwiYWN0aXZlIiwiZGF5IiwiYWRkQ2hpbGQiLCJub2RlIiwic2VsZWN0RXZlbnQiLCJldmVudCIsInRhcmdldCIsIm5hbWUiLCJvbkdldFRvcCIsIm9uR2V0SG9tUXVhIiwiY2hpbGRyZW4iLCJmb3JFYWNoIiwiY29sb3IiLCJmcm9tSEVYIiwicGF1c2VTeXN0ZW1FdmVudHMiLCJDb2xvciIsIkJMQUNLIiwicmVzdW1lU3lzdGVtRXZlbnRzIiwic2VsZWN0SGVhZEhRIiwic2VuZCIsInRhaXhpdSIsImdldFRvcCIsImdldFRvcEhRIiwiZGF0ZVRvZ2dsZSIsImRhdGVWaWV3Iiwib2JqIiwib25EYXRhIiwiZGF0YSIsInRvcEhRIiwiZGVzdHJveUFsbENoaWxkcmVuIiwid2luIiwicmV2ZXJzZSIsImxvc3QiLCJ1c2VyIiwiaW5kZXgiLCJ0b3AiLCJ1c2VycyIsImxpbmUiLCJkYXRlIiwiZ2lmdCIsIm51bWJlcldpdGhDb21tYXMiLCJyZXdhcmQiLCJiaW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLElBQUlBLFNBQVNDLFFBQVEsUUFBUixDQUFiOztBQUVBQyxHQUFHQyxLQUFILENBQVM7QUFDUkMsVUFBU0YsR0FBR0csU0FESjs7QUFHUkMsYUFBWTtBQUNYQyxRQUFTTCxHQUFHTSxJQUREO0FBRVhDLFdBQVNQLEdBQUdNLElBRkQ7O0FBSVhFLFVBQWNSLEdBQUdNLElBSk47QUFLWEcsYUFBY1QsR0FBR00sSUFMTjtBQU1YSSxnQkFBY1YsR0FBR00sSUFOTjs7QUFRWEssUUFBZ0JYLEdBQUdZLE1BUlI7QUFTWEMsV0FBZ0JiLEdBQUdZLE1BVFI7QUFVWEUsaUJBQWdCZCxHQUFHTSxJQVZSO0FBV1hTLGtCQUFnQmYsR0FBR00sSUFYUjs7QUFhWFUsYUFBY2hCLEdBQUdpQixLQWJOO0FBY1hDLGdCQUFjbEIsR0FBR00sSUFkTjtBQWVYYSxXQUFjO0FBZkgsRUFISjtBQW9CUkMsU0FBUSxrQkFBWTtBQUNuQixPQUFLQyxPQUFMLEdBQWUsSUFBSUMsSUFBSixFQUFmO0FBQ0EsT0FBS0QsT0FBTCxDQUFhRSxPQUFiLENBQXFCLEtBQUtGLE9BQUwsQ0FBYUcsT0FBYixLQUF1QixDQUE1QztBQUNBLE1BQUlDLGFBQWEzQixPQUFPNEIsU0FBUCxDQUFpQixLQUFLTCxPQUFMLENBQWFHLE9BQWIsRUFBakIsRUFBeUMsQ0FBekMsSUFBOEMsR0FBOUMsR0FBb0QxQixPQUFPNEIsU0FBUCxDQUFpQixLQUFLTCxPQUFMLENBQWFNLFFBQWIsS0FBd0IsQ0FBekMsRUFBNEMsQ0FBNUMsQ0FBcEQsR0FBcUcsR0FBckcsR0FBMkcsS0FBS04sT0FBTCxDQUFhTyxXQUFiLEVBQTVIO0FBQ0EsT0FBS1osU0FBTCxDQUFl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NkIzQixLQUFLNEIsSUFBbEM7QUFDQSxHQVppQixDQVloQnVDLElBWmdCLENBWVgsSUFaVyxDQUFsQjtBQWFBO0FBM0lPLENBQVQiLCJmaWxlIjoiRXZlbnRUYWlYaXUuanMiLCJzb3VyY2VSb290IjoiLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGFzc2V0c1xcU2NyaXB0XFxNb2RlbFxcRGlhbG9nXFxERXZlbnQiLCJzb3VyY2VzQ29udGVudCI6WyJcclxudmFyIGhlbHBlciA9IHJlcXVpcmUoJ0hlbHBlcicpO1xyXG5cclxuY2MuQ2xhc3Moe1xyXG5cdGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcblx0cHJvcGVydGllczoge1xyXG5cdFx0bWVudTogICAgY2MuTm9kZSxcclxuXHRcdGNvbnRlbnQ6IGNjLk5vZGUsXHJcblxyXG5cdFx0SFFtZW51OiAgICAgICBjYy5Ob2RlLFxyXG5cdFx0SFFjb250ZW50OiAgICBjYy5Ob2RlLFxyXG5cdFx0SFFjb250ZW50RGF5OiBjYy5Ob2RlLFxyXG5cclxuXHRcdGl0ZW06ICAgICAgICAgICBjYy5QcmVmYWIsXHJcblx0XHRpdGVtRGF5OiAgICAgICAgY2MuUHJlZmFiLFxyXG5cdFx0Y29udGVudEhRTGVmdDogIGNjLk5vZGUsXHJcblx0XHRjb250ZW50SFFSaWdodDogY2MuTm9kZSxcclxuXHJcblx0XHRMYWJlbERhdGU6ICAgIGNjLkxhYmVsLFxyXG5cdFx0bm9kZURhdGVNb3JlOiBjYy5Ob2RlLFxyXG5cdFx0ZGF0YU9sZDogICAgICBmYWxzZSxcclxuXHR9LFxyXG5cdG9uTG9hZDogZnVuY3Rpb24gKCkge1xyXG5cdFx0dGhpcy5kYXRlVG9wID0gbmV3IERhdGUoKTtcclxuXHRcdHRoaXMuZGF0ZVRvcC5zZXREYXRlKHRoaXMuZGF0ZVRvcC5nZXREYXRlKCktMSk7XHJcblx0XHRsZXQgc3RyaW5nVGltZSA9IGhlbHBlci5udW1iZXJQYWQodGhpcy5kYXRlVG9wLmdldERhdGUoKSwgMikgKyAnLycgKyBoZWxwZXIubnVtYmVyUGFkKHRoaXMuZGF0ZVRvcC5nZXRNb250aCgpKzEsIDIpICsgJy8nICsgdGhpcy5kYXRlVG9wLmdldEZ1bGxZZWFyKCk7XHJcblx0XHR0aGlzLkxhYmVsRGF0ZS5zdHJpbmcgPSBzdHJpbmdUaW1lO1xyXG5cclxuXHRcdGZvciAobGV0IGkgPSAwOyBpIDwxMTsgaSsrKSB7XHJcblx0XHRcdGxldCBkYXRlSCA9IG5ldyBEYXRlKCk7XHJcblx0XHRcdGRhdGVILnNldERhdGUoZGF0ZUguZ2V0RGF0ZSgpLTEtaSk7XHJcblx0XHRcdGxldCBpdGVtID0gY2MuaW5zdGFudGlhdGUodGhpcy5pdGVtRGF5KTtcclxuXHRcdFx0aXRlbSA9IGl0ZW0uZ2V0Q29tcG9uZW50KCdFdmVudFRhaVhpdV9pdGVtRGF5Jyk7XHJcblx0XHRcdGl0ZW0uUmVkVCAgICAgICAgID0gdGhpcztcclxuXHRcdFx0aXRlbS5iZy5hY3RpdmUgICAgPSBpJTI7XHJcblx0XHRcdGl0ZW0uZGF5LnN0cmluZyAgID0gaGVscGVyLm51bWJlclBhZChkYXRlSC5nZXREYXRlKCksIDIpICsgJy8nICsgaGVscGVyLm51bWJlclBhZChkYXRlSC5nZXRNb250aCgpKzEsIDIpICsgJy8nICsgZGF0ZUguZ2V0RnVsbFllYXIoKTtcclxuXHRcdFx0dGhpcy5IUWNvbnRlbnREYXkuYWRkQ2hpbGQoaXRlbS5ub2RlKTtcclxuXHRcdH1cclxuXHR9LFxyXG5cdHNlbGVjdEV2ZW50OiBmdW5jdGlvbihldmVudCkge1xyXG5cdFx0dGhpcy5ub2RlRGF0ZU1vcmUuYWN0aXZlID0gZmFsc2U7XHJcblx0XHRpZiAoZXZlbnQudGFyZ2V0Lm5hbWUgPT0gXCJ0b3BcIikge1xyXG5cdFx0XHR0aGlzLm9uR2V0VG9wKCk7XHJcblx0XHR9ZWxzZSBpZiAoZXZlbnQudGFyZ2V0Lm5hbWUgPT0gXCJob21xdWFcIikge1xyXG5cdFx0XHR0aGlzLm9uR2V0SG9tUXVhKCk7XHJcblx0XHR9XHJcblx0XHR0aGlzLm1lbnUuY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbihtZW51KXtcclxuXHRcdFx0aWYgKG1lbnUubmFtZSA9PT0gZXZlbnQudGFyZ2V0Lm5hbWUpIHtcclxuXHRcdFx0XHRtZW51LmNoaWxkcmVuWzBdLmFjdGl2ZSA9IGZhbHNlO1xyXG5cdFx0XHRcdG1lbnUuY2hpbGRyZW5bMV0uYWN0aXZlID0gdHJ1ZTtcclxuXHRcdFx0XHRtZW51LmNoaWxkcmVuWzJdLmNvbG9yICA9IGNjLmNvbG9yKCkuZnJvbUhFWCgnRkFGNTc4Jyk7XHJcblx0XHRcdFx0bWVudS5wYXVzZVN5c3RlbUV2ZW50cygpO1xyXG5cdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHRtZW51LmNoaWxkcmVuWzBdLmFjdGl2ZSA9IHRydWU7XHJcblx0XHRcdFx0bWVudS5jaGlsZHJlblsxXS5hY3RpdmUgPSBmYWxzZTtcclxuXHRcdFx0XHRtZW51LmNoaWxkcmVuWzJdLmNvbG9yICA9IGNjLkNvbG9yLkJMQUNLO1xyXG5cdFx0XHRcdG1lbnUucmVzdW1lU3lzdGVtRXZlbnRzKCk7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdFx0dGhpcy5jb250ZW50LmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24oY29udGVudCl7XHJcblx0XHRcdGlmIChjb250ZW50Lm5hbWUgPT09IGV2ZW50LnRhcmdldC5uYW1lKSB7XHJcblx0XHRcdFx0Y29udGVudC5hY3RpdmUgPSB0cnVlO1xyXG5cdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHRjb250ZW50LmFjdGl2ZSA9IGZhbHNlO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHR9LFxyXG5cdHNlbGVjdEhlYWRIUTogZnVuY3Rpb24oZXZlbnQpIHtcclxuXHRcdHRoaXMuSFFtZW51LmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24obWVudSl7XHJcblx0XHRcdGlmIChtZW51Lm5hbWUgPT09IGV2ZW50LnRhcmdldC5uYW1lKSB7XHJcblx0XHRcdFx0bWVudS5jaGlsZHJlblswXS5hY3RpdmUgPSBmYWxzZTtcclxuXHRcdFx0XHRtZW51LmNoaWxkcmVuWzFdLmFjdGl2ZSA9IHRydWU7XHJcblx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdG1lbnUuY2hpbGRyZW5bMF0uYWN0aXZlID0gdHJ1ZTtcclxuXHRcdFx0XHRtZW51LmNoaWxkcmVuWzFdLmFjdGl2ZSA9IGZhbHNlO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHRcdHRoaXMuSFFjb250ZW50LmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24oY29udGVudCl7XHJcblx0XHRcdGlmIChjb250ZW50Lm5hbWUgPT09IGV2ZW50LnRhcmdldC5uYW1lKSB7XHJcblx0XHRcdFx0Y29udGVudC5hY3RpdmUgPSB0cnVlO1xyXG5cdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHRjb250ZW50LmFjdGl2ZSA9IGZhbHNlO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHR9LFxyXG5cdG9uR2V0VG9wOiBmdW5jdGlvbigpe1xyXG5cdFx0Y2MuUmVkVC5zZW5kKHtldmVudDp7dGFpeGl1OntnZXRUb3A6dHJ1ZX19fSk7XHJcblx0fSxcclxuXHRvbkdldEhvbVF1YTogZnVuY3Rpb24oKXtcclxuXHRcdCF0aGlzLmRhdGFPbGQgJiYgY2MuUmVkVC5zZW5kKHtldmVudDp7dGFpeGl1OntnZXRUb3BIUTp0aGlzLkxhYmVsRGF0ZS5zdHJpbmd9fX0pO1xyXG5cdH0sXHJcblx0ZGF0ZVRvZ2dsZTogZnVuY3Rpb24oKXtcclxuXHRcdHRoaXMubm9kZURhdGVNb3JlLmFjdGl2ZSA9ICF0aGlzLm5vZGVEYXRlTW9yZS5hY3RpdmU7XHJcblx0fSxcclxuXHRkYXRlVmlldzogZnVuY3Rpb24ob2JqKXtcclxuXHRcdGlmIChvYmouc3RyaW5nICE9IHRoaXMuTGFiZWxEYXRlLnN0cmluZykge1xyXG5cdFx0XHR0aGlzLmRhdGFPbGQgPSBmYWxzZTtcclxuXHRcdFx0dGhpcy5MYWJlbERhdGUuc3RyaW5nID0gb2JqLnN0cmluZztcclxuXHRcdFx0dGhpcy5vbkdldEhvbVF1YSgpO1xyXG5cdFx0fVxyXG5cdFx0dGhpcy5ub2RlRGF0ZU1vcmUuYWN0aXZlID0gZmFsc2U7XHJcblx0fSxcclxuXHRvbkRhdGE6IGZ1bmN0aW9uKGRhdGEpe1xyXG5cdFx0aWYgKCEhZGF0YS50b3BIUSkge1xyXG5cdFx0XHR0aGlzLmRhdGFPbGQgPSB0cnVlO1xyXG5cdFx0XHR0aGlzLnRvcEhRKGRhdGEudG9wSFEpO1xyXG5cdFx0fVxyXG5cdH0sXHJcblx0dG9wSFE6IGZ1bmN0aW9uKGRhdGEpe1xyXG5cdFx0dGhpcy5jb250ZW50SFFMZWZ0LmRlc3Ryb3lBbGxDaGlsZHJlbigpO1xyXG5cdFx0dGhpcy5jb250ZW50SFFSaWdodC5kZXN0cm95QWxsQ2hpbGRyZW4oKTtcclxuXHJcblx0XHRkYXRhLndpbi5yZXZlcnNlKCk7XHJcblx0XHRkYXRhLmxvc3QucmV2ZXJzZSgpO1xyXG5cclxuXHRcdGRhdGEud2luLmZvckVhY2goZnVuY3Rpb24odXNlciwgaW5kZXgpe1xyXG5cdFx0XHRsZXQgaXRlbSA9IGNjLmluc3RhbnRpYXRlKHRoaXMuaXRlbSk7XHJcblx0XHRcdGl0ZW0gPSBpdGVtLmdldENvbXBvbmVudCgnRXZlbnRUYWlYaXVfaXRlbScpO1xyXG5cdFx0XHRpdGVtLmJnLmFjdGl2ZSAgICA9IGluZGV4JTI7XHJcblx0XHRcdGl0ZW0udG9wLnN0cmluZyAgID0gdXNlci50b3A7XHJcblx0XHRcdGl0ZW0udXNlcnMuc3RyaW5nID0gdXNlci5uYW1lO1xyXG5cdFx0XHRpdGVtLmRheS5zdHJpbmcgICA9IHVzZXIubGluZTtcclxuXHRcdFx0aXRlbS5kYXRlLnN0cmluZyAgPSB0aGlzLkxhYmVsRGF0ZS5zdHJpbmc7XHJcblx0XHRcdGl0ZW0uZ2lmdC5zdHJpbmcgID0gaGVscGVyLm51bWJlcldpdGhDb21tYXModXNlci5yZXdhcmQpO1xyXG5cdFx0XHRpdGVtLm5vZGUuY2hpbGRyZW5bMF0uYWN0aXZlID0gIShpbmRleCYxKTtcclxuXHRcdFx0dGhpcy5jb250ZW50SFFMZWZ0LmFkZENoaWxkKGl0ZW0ubm9kZSk7XHJcblx0XHR9LmJpbmQodGhpcykpO1xyXG5cclxuXHRcdGRhdGEubG9zdC5mb3JFYWNoKGZ1bmN0aW9uKHVzZXIsIGluZGV4KXtcclxuXHRcdFx0bGV0IGl0ZW0gPSBjYy5pbnN0YW50aWF0ZSh0aGlzLml0ZW0pO1xyXG5cdFx0XHRpdGVtID0gaXRlbS5nZXRDb21wb25lbnQoJ0V2ZW50VGFpWGl1X2l0ZW0nKTtcclxuXHRcdFx0XHJcblx0XHRcdGl0ZW0uYmcuYWN0aXZlICAgID0gaW5kZXglMjtcclxuXHRcdFx0aXRlbS50b3Auc3RyaW5nICAgPSB1c2VyLnRvcDtcclxuXHRcdFx0aXRlbS51c2Vycy5zdHJpbmcgPSB1c2VyLm5hbWU7XHJcblx0XHRcdGl0ZW0uZGF5LnN0cmluZyAgID0gdXNlci5saW5lO1xyXG5cdFx0XHRpdGVtLmRhdGUuc3RyaW5nICA9IHRoaXMuTGFiZWxEYXRlLnN0cmluZztcclxuXHRcdFx0aXRlbS5naWZ0LnN0cmluZyAgPSBoZWxwZXIubnVtYmVyV2l0aENvbW1hcyh1c2VyLnJld2FyZCk7XHJcblx0XHRcdGl0ZW0ubm9kZS5jaGlsZHJlblswXS5hY3RpdmUgPSAhKGluZGV4JjEpO1xyXG5cdFx0XHR0aGlzLmNvbnRlbnRIUVJpZ2h0LmFkZENoaWxkKGl0ZW0ubm9kZSk7XHJcblx0XHR9LmJpbmQodGhpcykpO1xyXG5cdH0sXHJcbn0pO1xyXG4iXX0=